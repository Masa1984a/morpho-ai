// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Asset {
  id           String    @id @default(uuid())
  symbol       String    @unique
  name         String
  category     String    // 'coin' | 'stable' | 'wrapped'
  chains       Json?
  officialUrls Json?
  createdAt    DateTime  @default(now())
  summaries    Summary[]
  prices       Price[]
  sources      Source[]

  @@map("assets")
}

model Run {
  id              String    @id @default(uuid())
  startedAt       DateTime  @default(now())
  finishedAt      DateTime?
  kind            String    // 'hourly' | 'daily'
  status          String    // 'success' | 'fail' | 'pending'
  model           String
  reasoningEffort String?   // 'low' | 'medium' | 'high'
  verbosity       String?   // 'low' | 'medium' | 'high'
  tokenIn         Int?
  tokenOut        Int?
  costUsd         Decimal?  @db.Decimal(10, 4)
  error           String?
  summaries       Summary[]
  sources         Source[]

  @@index([kind, status])
  @@index([startedAt])
  @@map("runs")
}

model Source {
  id             String    @id @default(uuid())
  runId          String
  assetId        String
  url            String
  title          String?
  domain         String?
  publishedAt    DateTime?
  fetchedAt      DateTime  @default(now())
  hash           String?
  relevanceScore Float?
  run            Run       @relation(fields: [runId], references: [id], onDelete: Cascade)
  asset          Asset     @relation(fields: [assetId], references: [id], onDelete: Cascade)

  @@index([runId])
  @@index([assetId])
  @@index([url])
  @@map("sources")
}

model Summary {
  id          String   @id @default(uuid())
  runId       String
  assetId     String
  overviewMd  String   @db.Text
  market1dMd  String   @db.Text
  market30dMd String   @db.Text
  outlookMd   String   @db.Text
  confidence  Float?
  citations   String[] // array of Source.id
  createdAt   DateTime @default(now())
  run         Run      @relation(fields: [runId], references: [id], onDelete: Cascade)
  asset       Asset    @relation(fields: [assetId], references: [id], onDelete: Cascade)

  @@index([assetId, createdAt])
  @@index([runId])
  @@map("summaries")
}

model Price {
  id           String   @id @default(uuid())
  assetId      String
  ts           DateTime
  priceUsd     Decimal  @db.Decimal(18, 8)
  marketCapUsd Decimal? @db.Decimal(18, 2)
  volume24hUsd Decimal? @db.Decimal(18, 2)
  raw          Json?
  asset        Asset    @relation(fields: [assetId], references: [id], onDelete: Cascade)

  @@index([assetId, ts])
  @@map("prices")
}

model Kv {
  key       String   @id
  value     Json?
  updatedAt DateTime @default(now()) @updatedAt

  @@map("kvs")
}
